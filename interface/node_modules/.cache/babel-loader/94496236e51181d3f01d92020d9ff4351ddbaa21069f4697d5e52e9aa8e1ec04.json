{"ast":null,"code":"var _jsxFileName = \"G:\\\\projetoclinica\\\\interface\\\\src\\\\pages\\\\login\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const onSubmit = async data => {\n    try {\n      const response = await axios.post(\"http://127.0.0.1:5000/login\", data);\n      alert(response.data.message);\n    } catch (error) {\n      alert(error.response.data.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"cpf\",\n          children: \"CPF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"cpf\",\n          ...register(\"cpf\", {\n            required: \"CPF é obrigatório\",\n            pattern: {\n              value: /^\\d{3}\\.\\d{3}\\.\\d{3}-\\d{2}$/,\n              message: \"Formato de CPF inválido\"\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), errors.cpf && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors.cpf.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Senha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          ...register(\"password\", {\n            required: \"Senha é obrigatória\"\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors.password.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Entrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"RcUlyA4GEHKh2CRkv6V7TGIZ2pY=\", false, function () {\n  return [useForm];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useForm","axios","jsxDEV","_jsxDEV","Login","_s","register","handleSubmit","formState","errors","onSubmit","data","response","post","alert","message","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","required","pattern","value","cpf","type","password","_c","$RefreshReg$"],"sources":["G:/projetoclinica/interface/src/pages/login/index.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport \"./styles.css\";\r\n\r\nconst Login = () => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      const response = await axios.post(\"http://127.0.0.1:5000/login\", data);\r\n      alert(response.data.message);\r\n    } catch (error) {\r\n      alert(error.response.data.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Login</h2>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <div>\r\n          <label htmlFor=\"cpf\">CPF</label>\r\n          <input\r\n            id=\"cpf\"\r\n            {...register(\"cpf\", {\r\n              required: \"CPF é obrigatório\",\r\n              pattern: {\r\n                value: /^\\d{3}\\.\\d{3}\\.\\d{3}-\\d{2}$/,\r\n                message: \"Formato de CPF inválido\",\r\n              },\r\n            })}\r\n          />\r\n          {errors.cpf && <p>{errors.cpf.message}</p>}\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor=\"password\">Senha</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            {...register(\"password\", { required: \"Senha é obrigatória\" })}\r\n          />\r\n          {errors.password && <p>{errors.password.message}</p>}\r\n        </div>\r\n\r\n        <button type=\"submit\">Entrar</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}